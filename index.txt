<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Game Stats Tracker</title>
  <link rel="manifest" href="manifest.json">
  <meta name="theme-color" content="#ffffff">
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
    }
    .input-section {
      margin-bottom: 20px;
    }
    .input-section label {
      display: block;
      margin-bottom: 5px;
      font-weight: bold;
    }
    .input-section input {
      padding: 8px;
      font-size: 16px;
      width: 100%;
      max-width: 300px;
      margin-bottom: 10px;
    }
    .button-container {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 20px;
      margin-bottom: 20px;
    }
    .stat-button, .score-button {
      padding: 10px 15px;
      font-size: 18px;
      cursor: pointer;
    }
    .stat-box {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }
    .count {
      margin-top: 8px;
      font-size: 24px;
      font-weight: bold;
    }
    .quarter {
      margin-top: 5px;
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
    }
    .quarter span {
      font-size: 18px;
      font-weight: bold;
      padding: 5px 10px;
    }
    .quarter1 { background-color: #ff9999; }
    .quarter2 { background-color: #99ff99; }
    .quarter3 { background-color: #9999ff; }
    .quarter4 { background-color: #ffcc66; }
    .score-diff {
      margin-top: 30px;
      font-size: 22px;
      font-weight: bold;
    }
    .score-controls {
      display: flex;
      gap: 10px;
      margin-top: 10px;
    }
    #clearButton, #saveQuarter {
      padding: 10px 15px;
      font-size: 18px;
      margin-top: 20px;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <h1>Game Stats Tracker</h1>

  <div class="input-section">
    <label for="opponent">Opponent:</label>
    <input type="text" id="opponent" placeholder="Enter opponent name">
    <label for="matchDate">Match Date:</label>
    <input type="date" id="matchDate">
  </div>

  <div class="button-container" id="buttonContainer"></div>

  <div class="score-diff">
    Score Diff: <span id="scoreValue">0</span>
    <div class="score-controls">
      <button class="score-button" id="increaseScore">+</button>
      <button class="score-button" id="decreaseScore">âˆ’</button>
    </div>
    <div class="quarter" id="scoreQuarterDisplay">
      <span class="quarter1">Q1: 0</span>
      <span class="quarter2">Q2: 0</span>
      <span class="quarter3">Q3: 0</span>
      <span class="quarter4">Q4: 0</span>
    </div>
  </div>

  <button id="clearButton">Clear All</button>
  <button id="saveQuarter">Save Quarter</button>

  <script>
    const buttonContainer = document.getElementById('buttonContainer');
    const statTitles = [
      "Home I50",
      "Away I50",
      "Home Clearance",
      "Away Clearance",
      "Tackles"
    ];

    const buttons = [];
    let currentQuarter = 0;

    statTitles.forEach((title) => {
      const statBox = document.createElement('div');
      statBox.className = 'stat-box';

      const button = document.createElement('button');
      button.className = 'stat-button';
      button.textContent = title;
      button.dataset.quarters = JSON.stringify([0, 0, 0, 0]);

      const countDisplay = document.createElement('div');
      countDisplay.className = 'count';
      countDisplay.textContent = 'Total: 0';

      const quarterContainer = document.createElement('div');
      quarterContainer.className = 'quarter';

      const quarters = ['quarter1', 'quarter2', 'quarter3', 'quarter4'];

      quarters.forEach((quarterClass, index) => {
        const quarterDisplay = document.createElement('span');
        quarterDisplay.classList.add(quarterClass);
        quarterDisplay.textContent = `Q${index + 1}: 0`;
        quarterContainer.appendChild(quarterDisplay);
      });

      button.addEventListener('click', () => {
        let quarters = JSON.parse(button.dataset.quarters);
        quarters[currentQuarter]++;
        button.dataset.quarters = JSON.stringify(quarters);

        const quarterDisplays = quarterContainer.getElementsByTagName('span');
        quarterDisplays[currentQuarter].textContent = `Q${currentQuarter + 1}: ${quarters[currentQuarter]}`;

        const total = quarters.reduce((sum, val) => sum + val, 0);
        countDisplay.textContent = `Total: ${total}`;
      });

      statBox.appendChild(button);
      statBox.appendChild(countDisplay);
      statBox.appendChild(quarterContainer);
      buttonContainer.appendChild(statBox);

      buttons.push({ button, countDisplay, quarterContainer });
    });

    let score = 0;
    let scorePerQuarter = [0, 0, 0, 0];
    const scoreValue = document.getElementById('scoreValue');
    const scoreQuarterDisplay = document.getElementById('scoreQuarterDisplay').getElementsByTagName('span');

    document.getElementById('increaseScore').addEventListener('click', () => {
      score++;
      scoreValue.textContent = score;
    });

    document.getElementById('decreaseScore').addEventListener('click', () => {
      score--;
      scoreValue.textContent = score;
    });

    document.getElementById('saveQuarter').addEventListener('click', () => {
      if (currentQuarter < 4) {
        scorePerQuarter[currentQuarter] = score;
        scoreQuarterDisplay[currentQuarter].textContent = `Q${currentQuarter + 1}: ${score}`;
        score = 0;
        scoreValue.textContent = '0';
        currentQuarter++;
        if (currentQuarter < 4) {
          alert(`Quarter ${currentQuarter} saved. Now tracking Q${currentQuarter + 1}.`);
        } else {
          alert("All 4 quarters have been tracked.");
        }
      } else {
        alert("All 4 quarters have already been saved.");
      }
    });

    document.getElementById('clearButton').addEventListener('click', () => {
      buttons.forEach(({ button, countDisplay, quarterContainer }) => {
        const quarters = [0, 0, 0, 0];
        button.dataset.quarters = JSON.stringify(quarters);

        const quarterDisplays = quarterContainer.getElementsByTagName('span');
        for (let q = 0; q < quarterDisplays.length; q++) {
          quarterDisplays[q].textContent = `Q${q + 1}: 0`;
        }

        countDisplay.textContent = 'Total: 0';
      });

      score = 0;
      scoreValue.textContent = '0';
      scorePerQuarter = [0, 0, 0, 0];
      for (let i = 0; i < 4; i++) {
        scoreQuarterDisplay[i].textContent = `Q${i + 1}: 0`;
      }
      currentQuarter = 0;
    });

    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('service-worker.js');
    }
  </script>
</body>
</html>
